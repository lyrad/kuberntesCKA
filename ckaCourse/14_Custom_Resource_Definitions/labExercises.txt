### Create a Custom Resource Definition.
# View existing CRD and describe one.
kubectl get crd --all-namespaces
kubectl describe crd ciliumcidrgroups.cilium.io

# Create a CRD (crd.yaml).
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: crontabs.stable.example.com
spec:
# group name to use for REST API: /apis/<group>/<version>
  group: stable.example.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                cronSpec:
                  type: string
                image:
                  type: string
                replicas:
                  type: integer
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: crontabs
    # singular name to be used as an alias on the CLI and for display
    singular: crontab
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CronTab
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - ct

kubectl create -f crd.yaml
kubectl get crd
kubectl describe crd crontabs.stable.example.com

# Create a new object (new-crontab.yaml) of created type (here a crontab-like image, which does not actually exist...).
apiVersion: "stable.example.com/v1"
kind: CronTab
metadata:
  name: new-cron-object
spec:
  cronSpec: "*/5****"
  # Does not exist
  image: some-cron-image

kubectl create -f new-crontab.yaml
kubectl get CronTab
kubectl get ct
kubectl describe ct

# Remove the resource by removing the CRD.
kubectl delete -f crd.yaml

